"use client"

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Rouker (https://sketchfab.com/Rouker)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/bodybuilder-base-mesh-f9218d0b1a834c52acc93eb6a88934fe
Title: bodybuilder base mesh
*/

import React, { Suspense, useEffect, useRef, useState } from "react"
import { PerspectiveCamera, useGLTF } from "@react-three/drei"
import { Canvas } from "@react-three/fiber"
import GUI from "lil-gui"

export function Bodybuilder(props) {
  const { nodes, materials } = useGLTF("/3d/bodybuilder_base_mesh1k.glb")
  const { position, setPosition } = useState([0, 0, 0])
  const meshRef = useRef()
  const lightRef = useRef()

  // Update the material properties to make it metallic
  materials.defaultMat.metalness = 0.9 // Full metallic effect
  materials.defaultMat.roughness = 0.1 // Slightly rough, adjust for shininess
  // materials.defaultMat.color = new THREE.Color(0x888888) // Grayish color, can be adjusted to suit

  useEffect(() => {
    if (!meshRef.current) return // Ensure ref is assigned before accessing properties

    const gui = new GUI()
    gui.add(meshRef.current.rotation, "x", -10, Math.PI * 2)
    gui.add(meshRef.current.rotation, "y", -10, Math.PI * 2)
    gui.add(meshRef.current.rotation, "z", -10, Math.PI * 2)
    gui.add(lightRef.current.position, "x", -100, 100, 0.1)
    gui.add(lightRef.current.position, "y", -100, 100, 0.1)
    gui.add(lightRef.current.position, "z", -100, 100, 0.1)
    return () => {
      gui.destroy()
    }
  }, [meshRef.current])

  return (
    <Canvas>
      {/* <Suspense fallback={null}> */}
      <PerspectiveCamera makeDefault position={[0, 3, 0]} />
      {/* Lightning */}
      <ambientLight intensity={0.5} />
      {/* Main light */}
      <directionalLight
        position={[10, 10, 5]}
        intensity={1}
        castShadow
        ref={lightRef}
      />
      {/* <directionalLight
        intensity={1}
        castShadow
      /> */}
      <group {...props} dispose={null}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_2.geometry}
          material={materials.defaultMat}
          rotation={[-Math.PI / 2, 0, -0.5]}
          position={[0, -8, -6]}
          ref={meshRef}
        />
      </group>
      {/* </Suspense> */}
    </Canvas>
  )
}

useGLTF.preload("/3d/bodybuilder_base_mesh1k.glb")
